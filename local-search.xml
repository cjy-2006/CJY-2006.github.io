<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>linux基础命令</title>
    <link href="/project/2025/10/11/Linux%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/"/>
    <url>/project/2025/10/11/Linux%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p>在Linux中一切皆为文件，文件夹名为目录。Linux的命令是模块化的通过空格来体现模块，故在使用命令时要注意这一点<br>linux如何获取管理员权限<br>一.临时权限（低风险，但麻烦）命令：sudo apt update<br>二.永久权限：su  # 切换到root用户<br>            # 输入root用户的密码（若未设置root密码，可能需要先通过sudo设置）<br>            exit  # 回到普通用户<br>注意：1.安全风险：永久使用 root 权限可能因误操作（如删除系统文件）导致系统崩溃，建议优先使用sudo获取<br>        临时权限。<br>      2.root 密码：部分 Linux 发行版（如 Ubuntu）默认禁用 root 密码，需通过sudo passwd root设置 root 密码后才能使用su切换。<br>      3.权限回收：若要取消某个用户的sudo权限，可通过visudo删除对应配置行。</p><ol><li><p>cd（cd ~）：默认切换到当前用户的家目录<br>cd ..：切换到父目录,..表示当前目录的上一级目录（父目录）<br>cd .：切换到当前目录（无实际意义）<br>cd -：切换到上一次所在的目录<br>cd &#x2F;：切换到根目录</p></li><li><p>ls:查看当前目录下的文件和子目录<br>ls -a:查看更详细的目录<br>ls -l:以长格式显示文件 &#x2F; 目录的详细信息，每行代表一个文件 &#x2F; 目录，输出包含 7 个核心字<br>例如-rw-r–r–  1  user  group  1024  Oct 14 15:30  file.txt<br> 各字段含义：<br> 1.权限位（-rw-r–r–）：共 10 位<br> a.第 1 位：文件类型（-普通文件，d目录，l软链接，b块设备等）<br> b.后 9 位：权限（分 3 组，每组 3 位，分别对应所有者 u、所属组 g、其他用户 o的权限）r（读，4）、w（写，2）、x（执行，1）， -表示无权限<br>  ps.示例中：所有者有rw（读写），组用户和其他用户有r（只读）。<br> c.硬链接数（1）：文件被硬链接的次数（目录默认是 2，含.和..）。<br> d.所有者（user）：文件的所属用户。<br> e. 所属组（group）：文件的所属用户组。<br> f.大小（1024）：文件大小（单位字节，目录显示为 4096 等固定值）。<br> g.修改时间（Oct 14 15:30）：文件最后一次内容修改的时间。<br> h.文件名 &#x2F; 目录名（file.txt）：文件或目录的名称。</p></li><li><p>touch :创建文件<br>touch  file1 file2 file3:创建三个文件<br>touch &#x2F;目录&#x2F;文件名：在指定目录中创建文件</p></li><li><p>cat :查看文件内容<br>cat file1 file2 file3:查看多个文件<br>cat &gt; [新文件名]：创建新文件并写入内容,ctrl+d建是退出编辑模式<br>cat &gt;&gt; [文件名]：向已有文件追加内容<br>cat [文件1] [文件2] &gt; [目标文件]：合并多个文件到新文件</p></li><li><p>管道符（|）的使用<br>管道符用于将前一个命令的输出作为后一个命令的输入，实现命令组合。<br>格式：命令1 | 命令2<br>例如<br><img src="/project/.io//%E4%BE%8B%E5%AD%901.png" alt="先用ls将桌面上的文件全列举出来，再用greb命令将其中带有txt的筛出来"></p></li><li><p>mv 如何重命名文件 mv 命令本质是 “移动文件”，当源文件和目标路径在同一目录时，就是 “重命名”。<br>格式：mv .&#x2F;现在目录的子目录，目标文件的父目录（有点拗口）&#x2F;目标文件 .&#x2F;同上&#x2F;目的地<br>！<a href="%E4%BE%8B%E5%AD%902.png">例3</a></p></li><li><p>ln -s:软连接，旨在简化路径，其用途类似于Python中import 模块名 as 别名<br>注意：若源文件移动位置，软连接会失效，需重新创建。<br>例：ln -s &#x2F;home&#x2F;cjy&#x2F;桌面&#x2F;b.txt  toc  #将b.txt文件简称为toc</p></li><li><p>cp:复制文件</p><h1 id="复制当前目录的-note-txt-到-home-user-backup-目录下"><a href="#复制当前目录的-note-txt-到-home-user-backup-目录下" class="headerlink" title="复制当前目录的 note.txt 到 &#x2F;home&#x2F;user&#x2F;backup 目录下"></a>复制当前目录的 note.txt 到 &#x2F;home&#x2F;user&#x2F;backup 目录下</h1><p>cp note.txt &#x2F;home&#x2F;user&#x2F;backup&#x2F;</p><h1 id="复制文件并在目标位置重命名（若目标是新文件名）"><a href="#复制文件并在目标位置重命名（若目标是新文件名）" class="headerlink" title="复制文件并在目标位置重命名（若目标是新文件名）"></a>复制文件并在目标位置重命名（若目标是新文件名）</h1><p>cp data.csv &#x2F;tmp&#x2F;archive&#x2F;data_backup.csv</p><p>注：复制目录需加 -r（递归）：cp -r .&#x2F;docs &#x2F;mnt&#x2F;usb&#x2F;</p></li><li><p>绝对路径和相对路径<br>   绝对路径：从根目录（&#x2F;）开始的完整路径，唯一确定文件位置。<br>   示例：&#x2F;home&#x2F;user&#x2F;downloads&#x2F;file.zip、&#x2F;etc&#x2F;nginx&#x2F;nginx.conf。<br>   相对路径：相对于当前所在目录的路径，依赖当前位置。<br>   符号：.&#x2F; 表示当前目录（可省略），..&#x2F; 表示上一级目录。</p></li></ol><p>   示例：<br>   若当前在 &#x2F;home&#x2F;user，则 .&#x2F;docs&#x2F;note.txt 等价于 docs&#x2F;note.txt（相对路径），对应绝对路径 &#x2F;home&#x2F; user&#x2F;docs&#x2F;note.txt。<br>   ..&#x2F;public&#x2F;index.html 表示 “上一级目录的 public 文件夹中的 index.html”。<br>11. 设置用户密码、root 密码及切换用户<br>    设置密码<br>    当前用户改密码：passwd（输入原密码，再输新密码）。<br>    管理员给其他用户设密码：sudo passwd 用户名（需 sudo 权限）。<br>    设置 root 密码（默认可能未启用）：sudo passwd root（输入当前用户密码，再设 root 新密码）。<br>    切换用户<br>    切换到普通用户：su - 用户名（- 表示加载目标用户的环境变量）。<br>    切换到 root 用户：su - root（需输入 root 密码）或 sudo -i（直接获取 root 环境，无需 root 密码，需当前用户在 sudoers 列表）。<br>    退出切换的用户：exit 或 Ctrl+D。<br>12. 文本编辑器的基本使用（写入、保存）<br>    简单编辑器 nano（推荐新手）<br>    打开 &#x2F; 创建文件：nano 文件名（如 nano test.txt）。<br>    写入内容：直接键盘输入即可。<br>    保存：按 Ctrl+O（提示确认文件名，回车确认）。<br>    退出：按 Ctrl+X。<br>13. 压缩文件<br>   a.tar命令<br>    压缩：tar -czf 压缩包名。tar.gz 源文件&#x2F;目录（此处指的是目标文件在压缩包的那个位置）<br>    解压：tar -xzf 压缩包名.tar.gz  # x&#x3D;解压，z&#x3D;gzip，f&#x3D;指定文件名<br>   b.zip格式<br>   压缩：zip 压缩包名.zip 文件1 文件2 目录<br>   解压：将zip改为unzip<br>14.  查看基本的日志文件<br>    cat &#x2F;var&#x2F;log&#x2F;syslog  # 查看全部内容（适合小文件）<br>   tail -n 20 &#x2F;var&#x2F;log&#x2F;auth.log  # 查看最后20行</p><p>   tail -f &#x2F;var&#x2F;log&#x2F;syslog  # 实时跟踪新增内容（按 Ctrl+C 退出）</p><ol start="13"><li><p>常用的二进制文件目录<br>&#x2F;bin：基本系统命令（如 ls、cp，所有用户可执行）。<br>&#x2F;sbin：系统管理命令（如 reboot、ifconfig，通常需 root 权限）。<br>&#x2F;usr&#x2F;bin：用户常用命令（如 python、git）。<br>&#x2F;usr&#x2F;sbin：用户系统管理命令（如 nginx、apache2）。<br>&#x2F;usr&#x2F;local&#x2F;bin：本地编译安装的程序（如手动安装的软件）。</p></li><li><p>给文件赋权（chmod）<br>  chmod 用于修改文件 &#x2F; 目录的读写执行权限：<br> 数字法（推荐）<br> 权限对应数字：r&#x3D;4，w&#x3D;2，x&#x3D;1，每组权限为 3 个数字之和（所有者 u、组 g、其他 o）。REAd&#x3D;r write &#x3D;w   execute(执行) &#x3D;x<br>  示例：<br> bash<br>  chmod 755 script.sh  # 所有者：rwx（7&#x3D;4+2+1），组和其他：rx（5&#x3D;4+1）<br>  chmod 644 note.txt   # 所有者：rw（6&#x3D;4+2），组和其他：r（4）</p></li><li><p>递归删除<br>删除目录及其所有子文件 &#x2F; 子目录，用 rm -r（r&#x3D; 递归），强制删除加 -f（不提示）。<br>示例：<br>bash<br>rm -r old_dir&#x2F;        # 删除 old_dir 及内容（会提示确认）<br>rm -rf temp&#x2F;          # 强制删除 temp 及内容</p></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>博客搭建</title>
    <link href="/project/2025/10/11/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <url>/project/2025/10/11/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>一  工具准备<br>    1.github账号注册（略）<br>    2.下载git<br>      在下载完成后鼠标右键 git bush here<br>      粘贴以下命令git config –global user.name “Your Name”<br>git config –global user.email “<a href="mailto:&#101;&#x6d;&#x61;&#105;&#x6c;&#64;&#101;&#x78;&#97;&#109;&#x70;&#108;&#x65;&#x2e;&#99;&#111;&#x6d;">email@example.com</a>“<br>    3.下载node js<br>    下载完成后输入node -v和npm -v检查是否安装成功<br>二    创建仓库<br>  进入github网站中点击右上角的头像，再点击Your repositonries点击new按钮，创建自己的仓库填写自己的仓库名，格式为&lt;用户名&gt;.github.io，然后点击Create repository点击创建新文件创建一个新文件，作为我们网站的主页新文件的名字必须为index.html，内容随意，填写之后点击Commit new file提交，<br>四 hexo部署<br>  1.安装 Hexo</p><p>   npm install -g hexo-cli<br>  2.查看版本chhexo -v<br>  3.初始化<br>  hexo init hexo-blog<br>   cd hexo-blog<br>   npm install<br>  4.本地启动<br>   hexo g<br>   hexo server<br>  5.创建文章<br>    Hexo 博客目录中的 _config.yml，打开这个配置是为了在生成文章的时候生成一个同名的资源目录用于存放图片文件。<br>    post_asset_folder: true<br>    执行如下命令创建一篇新文章，名为《测试文章》<br>    hexo new post 测试文章<br>    若要添加图片<br>      1.将hexo-blog文件夹拉入编辑器（如ws code中）打开post新建文件image<br>      2在image中加入图片<br>      3在目标文件中加入<img src="/project/images/%E3%80%82%E5%9B%BE%E7%89%87%E5%90%8Djpg" alt="图片描述">代码在末尾</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>虚拟机搭建</title>
    <link href="/project/2025/10/11/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BA/"/>
    <url>/project/2025/10/11/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>一 准备工作<br>   1.下载vmwear<br>   2.访问<a href="https://mirrors.tuna.tsinghua.edu.cn/%EF%BC%88%E6%B8%85%E5%8D%8E%E5%A4%A7%E5%AD%A6%E9%95%9C%E5%83%8F%E7%BD%91%E7%AB%99%EF%BC%89">https://mirrors.tuna.tsinghua.edu.cn/（清华大学镜像网站）</a><br>   3.下载iso文件<br>二 具体操作<br>   1.点击创建虚拟机。选择自定义。<br>   2.选择稍后安装操作系统<br>   3.选择Linux操作系统<br>   4.更改磁盘<br>   5.一直跟着推荐走直至完成</p><p>ps:笔者在配置时出现以下报错<br>    Mware Workstation 不可恢复错误: (svga)</p><p>Exception 0xc0000005 (access violation) has occurred.</p><p>日志文件位于“D:\vmwear工具\vmweardata\Ubuntu 64 位 (2)\vmware.log”中。  </p><p>您可以请求支持。  </p><p>要收集数据提交给 VMware 技术支持，请选择“帮助”菜单中的“收集支持数据”。</p><p>也可以直接在 Workstation 文件夹中运行“vm-support”脚本。</p><p>我们将根据您的技术支持权利做出回应。</p><p>目前尚未找到解决方案</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/project/2025/10/11/%E4%BD%A0%E5%A5%BD/"/>
    <url>/project/2025/10/11/%E4%BD%A0%E5%A5%BD/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/project/2025/10/11/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/project/2025/10/11/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p><img src="/project/.io//_image/1.jpg" alt="图片描述"></p>]]></content>
    
    
    
    <tags>
      
      <tag>测试</tag>
      
      <tag>示例</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello Hexo</title>
    <link href="/project/2025/10/11/Hello-Hexo/"/>
    <url>/project/2025/10/11/Hello-Hexo/</url>
    
    <content type="html"><![CDATA[<h1 id="这是文章正文"><a href="#这是文章正文" class="headerlink" title="这是文章正文"></a>这是文章正文</h1><p>这里可以使用 Markdown 语法编写内容，例如：</p><ul><li>列表项 1</li><li>列表项 2</li></ul><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>正文内容…</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/project/2025/10/09/hello-world/"/>
    <url>/project/2025/10/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p><img src="/project/images/1.jpg" alt="图片描述"></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
